{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-post-1-mdx-686865f139b0f68da3e7.js","mappings":"gOAiCO,MAAMA,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBC,GAC/B,MAAMC,EAAoB,aAAiBH,GAG3C,OAAO,WAAc,IAEO,mBAAfE,EACFA,EAAWC,GAGb,IAAIA,KAAsBD,IAChC,CAACC,EAAmBD,GACzB,CC3EA,SAASE,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,KACFC,IAAsBL,EAAMH,YAC/B,OAAOS,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBL,EAAYG,EAAG,KAAM,yPAA0P,KAAME,EAAAA,cAAoB,MAAO,CACnXC,IAAK,uBACLC,IAAK,WAET,CAKA,MAJA,SAAoBR,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,EAAGE,IAAsBL,EAAMH,YAC3E,OAAOa,EAAYJ,EAAAA,cAAoBI,EAAWV,EAAOM,EAAAA,cAAoBP,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCTA,MAAMW,EAAWC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAAS,EAChC,OAAOR,EAAAA,cAAoBS,EAAAA,OAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/Bb,EAAAA,cAAoB,IAAK,KAAMO,EAAKI,IAAIC,YAAYE,MAAON,EAAS,EAY5DO,EAAOC,IAAA,IAAC,KAACT,GAAK,SAAKP,EAAAA,cAAoBiB,EAAAA,IAAK,CACvDJ,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASK,EAAiBxB,GACvC,OAAOM,EAAAA,cAAoBK,EAAUX,EAAOM,EAAAA,cAAoBmB,EAAqBzB,GACvF,C,uDCDA,IAtBe,IAA8B,IAA7B,UAAEgB,EAAS,SAAEF,GAAU,EACrC,OACE,2BACE,2BACE,0BACE,0BAAI,gBAAC,KAAI,CAACY,GAAG,KAAI,SACjB,0BAAI,gBAAC,KAAI,CAACA,GAAG,UAAS,UACtB,0BACE,gBAAC,KAAI,CAACA,GAAG,SAAQ,WAMvB,4BACE,0BAAKV,GACJF,GAEC,C,+CCHV,IAhBY,IAAgB,IAAf,MAAEK,GAAO,EACpB,MAAMN,GAAOc,EAAAA,EAAAA,IAAe,cAU5B,OACE,6BAAQR,EAAM,MAAIN,EAAKe,KAAKC,aAAaV,MAAc,C","sources":["webpack://lucas-bevins-s-weird-site/./node_modules/@mdx-js/react/lib/index.js","webpack://lucas-bevins-s-weird-site/./blog/post1.mdx","webpack://lucas-bevins-s-weird-site/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://lucas-bevins-s-weird-site/./src/components/layout.js","webpack://lucas-bevins-s-weird-site/./src/components/seo.js"],"sourcesContent":["/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"My dog is named Donald, or Don for short. He is very tiny and very weird. Whenever he goes to hotels with us, he stays in the window and waits until we leave. One time we took him on a walk on vacation in Nashville and he jumped into a fountain.\"), \"\\n\", React.createElement(\"img\", {\n    src: \"...\\\\images\\\\don.jpg\",\n    alt: \"Donald\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/lucas/lucas-bevins-s-weird-site/blog/post1.mdx\";\nimport * as React from 'react';\nimport {Layout} from '../../components/layout';\nimport {StaticImage} from 'gatsby-plugin-image';\nimport {graphql} from 'gatsby';\nimport {Seo} from '../../components/seo';\nconst BlogPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, React.createElement(\"p\", null, data.mdx.frontmatter.date), children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Seo from '../components/seo'\r\n\r\nconst Layout = ({ pageTitle, children }) => {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <ul>\r\n          <li><Link to=\"/\">Home</Link></li>\r\n          <li><Link to=\"/about\">About</Link></li>\r\n          <li>\r\n            <Link to=\"/blog\">\r\n              Blog\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n      <main>\r\n        <h1>{pageTitle}</h1>\r\n        {children}\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout","import * as React from 'react'\r\nimport { graphql, useStaticQuery } from 'gatsby'\r\n\r\nconst Seo = ({ title }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <title>{title} | {data.site.siteMetadata.title}</title>\r\n  )\r\n}\r\n\r\nexport default Seo"],"names":["MDXContext","useMDXComponents","components","contextComponents","_createMdxContent","props","_components","Object","assign","p","_provideComponents","React","src","alt","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","to","useStaticQuery","site","siteMetadata"],"sourceRoot":""}